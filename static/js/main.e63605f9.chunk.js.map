{"version":3,"sources":["components/LoginForm/index.js","components/ProjectHeader/index.js","components/Home/index.js","components/JobItemCard/index.js","components/ProfileDetails/index.js","components/Jobs/index.js","components/ProtectedRoute/index.js","components/NotFound/index.js","components/SimilarJobsCard/index.js","components/JobItemDetails/index.js","App.js","index.js"],"names":["LoginForm","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","username","password","errorMsg","onLoginsuccess","jwtToken","Cookies","set","expires","props","history","replace","onSubmitform","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_this$state","userDetails","options","response","data","wrap","_context","prev","next","preventDefault","method","body","JSON","stringify","fetch","sent","json","ok","jwt_token","console","log","error_msg","setState","stop","_x","apply","onChangeUsername","target","value","onChangepassword","_inherits","_createClass","key","_this$state2","this","undefined","get","_jsx","Redirect","to","className","children","_jsxs","src","alt","onSubmit","htmlFor","id","type","onChange","placeholder","Component","withRouter","Link","onClick","remove","Home","_Fragment","ProjectHeaader","push","JobItemCard","itemDetails","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","BsFillStarFill","AiFillEnvironment","BsBriefcaseFill","apiStatusList","ProfileDetails","profilestatus","getProfileDetails","profileDetails","updatedData","headers","Authorization","profile_details","updateddatafunc","profile","name","profileImageUrl","profile_image_url","shortBio","short_bio","renderprofilecard","retryFetchProfile","renderprofileFailure","renderloader","Loader","color","height","width","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","Jobs","typeOfemplList","salaryoption","searchInput","jobsList","jobstatus","convertData","eachItem","company_logo_url","employment_type","job_description","package_per_annum","getJobsDetails","liststr","url","join","jobs","map","each","_callee2","_context2","profilecard","employType","includes","prevState","filter","eachitem","_toConsumableArray","salaryOptions","renderjobsList","retryFetch","renderFailureView","renderFetchStatus","onChangeSearchInput","searchStart","ProjectHeader","BsSearch","ProtectedRoute","Route","_objectSpread","NotFound","SimilarJobsCard","jobdetails","JobItemDetails","wholejobDetails","loadingstatus","skillsConvertion","eachskill","imageUrl","image_url","dataConversion","job","companyWebsiteUrl","company_website_url","skills","lifeAtCompany","description","life_at_company","dataCoversionOfSimilarJobs","companyWebsite","getitemDetails","match","params","jobDetails","job_details","similarJobs","similar_jobs","renderApiStatus","renderJobDetails","href","App","Switch","exact","path","component","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e63605f9.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport {Component} from 'react'\n\nimport './index.css'\n\nclass LoginForm extends Component {\n  state = {username: '', password: '', errorMsg: ''}\n\n  onLoginsuccess = jwtToken => {\n    Cookies.set('jwt_token', jwtToken, {expires: 30})\n    const {history} = this.props\n    history.replace('/')\n  }\n\n  onSubmitform = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      this.onLoginsuccess(data.jwt_token)\n    } else {\n      console.log(data.error_msg)\n      this.setState({errorMsg: data.error_msg})\n    }\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangepassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  render() {\n    const {username, password, errorMsg} = this.state\n\n    const accessToken = Cookies.get('jwt_token')\n    if (accessToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <div className=\"back\">\n        <div className=\"login-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"website-logo\"\n          />\n          <form className=\"form-container\" onSubmit={this.onSubmitform}>\n            <label htmlFor=\"username\" className=\"inputel-label\">\n              USERNAME\n            </label>\n            <input\n              className=\"inputel\"\n              id=\"username\"\n              type=\"text\"\n              onChange={this.onChangeUsername}\n              value={username}\n              placeholder=\"Username\"\n            />\n            <label htmlFor=\"password\" className=\"inputel-label\">\n              PASSWORD\n            </label>\n            <input\n              className=\"inputel\"\n              type=\"password\"\n              id=\"password\"\n              onChange={this.onChangepassword}\n              value={password}\n              placeholder=\"Password\"\n            />\n            <button className=\"submit-btn\" type=\"submit\">\n              Login\n            </button>\n          </form>\n          <p className=\"errmsg\">{errorMsg}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm\n","import Cookies from 'js-cookie'\n\nimport {Link, withRouter} from 'react-router-dom'\n\nimport './index.css'\n\nconst ProjectHeader = props => {\n  const onClicklogout = () => {\n    const {history} = props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  return (\n    <div className=\"navbar\">\n      <ul className=\"navbar-list\">\n        <li className=\"list-item\">\n          <Link to=\"/\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n              alt=\"website logo\"\n              className=\"nav-logo\"\n            />\n          </Link>\n        </li>\n        <li className=\"list-item\">\n          <ul className=\"options-container\">\n            <li className=\"list-item\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className=\"list-item\">\n              <Link to=\"/jobs\">Jobs</Link>\n            </li>\n          </ul>\n        </li>\n        <li className=\"list-item\">\n          <button className=\"logout-btn\" type=\"button\" onClick={onClicklogout}>\n            Logout\n          </button>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default withRouter(ProjectHeader)\n","import {Link} from 'react-router-dom'\nimport ProjectHeaader from '../ProjectHeader'\nimport './index.css'\n\nconst Home = props => {\n  const onClickjobs = () => {\n    const {history} = props\n    history.push('/jobs')\n  }\n\n  return (\n    <>\n      <ProjectHeaader />\n      <div className=\"home-bg-container\">\n        <div className=\"text-container\">\n          <h1 className=\"home-heading\">Find The Job That Fits Your Life</h1>\n          <p className=\"description\">\n            Millions of people are searching for jobs,salary information,company\n            reviews.Find the job that fits your abilities and potential\n          </p>\n          <button className=\"findJobs-btn\" type=\"button\" onClick={onClickjobs}>\n            <Link to=\"/jobs\">Find Jobs</Link>\n          </button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import {BsFillStarFill, BsBriefcaseFill} from 'react-icons/bs'\nimport {AiFillEnvironment} from 'react-icons/ai'\nimport {Link} from 'react-router-dom'\nimport './index.css'\n\nconst JobItemCard = props => {\n  const {itemDetails} = props\n\n  const {\n    companyLogoUrl,\n    employmentType,\n    id,\n    jobDescription,\n    location,\n    packagePerAnnum,\n    rating,\n    title,\n  } = itemDetails\n\n  return (\n    <li className=\"job-item\">\n      <Link to={`/jobs/${id}`}>\n        <div className=\"cardbg-container\">\n          <div className=\"name-logo-container\">\n            <img className=\"applogo\" alt=\"company logo\" src={companyLogoUrl} />\n            <div className=\"name-container\">\n              <h1 className=\"company-name\">{title}</h1>\n              <div className=\"rating-container\">\n                <BsFillStarFill className=\"star-icon\" />\n                <p className=\"rating\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"extra-options-container\">\n            <div className=\"location-and-type-container\">\n              <AiFillEnvironment className=\"location-icon\" />\n              <p className=\"location\">{location}</p>\n              <BsBriefcaseFill className=\"case-icon\" />\n              <p className=\"type\">{employmentType}</p>\n            </div>\n            <p className=\"salary\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"hrline\" />\n          <h1 className=\"description-heading\">Description</h1>\n          <p className=\"description\">{jobDescription}</p>\n        </div>\n      </Link>\n    </li>\n  )\n}\n\nexport default JobItemCard\n","import Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {Component} from 'react'\nimport './index.css'\n\nconst apiStatusList = {\n  initial: 'INITIAL',\n  loading: 'LOADING',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass ProfileDetails extends Component {\n  state = {profilestatus: apiStatusList.initial}\n\n  componentDidMount() {\n    this.getProfileDetails()\n  }\n\n  getProfileDetails = async () => {\n    this.setState({profilestatus: apiStatusList.loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n    const url = 'https://apis.ccbp.in/profile'\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      const profileDetails = data.profile_details\n\n      const updatedData = this.updateddatafunc(profileDetails)\n\n      this.setState({\n        profileDetails: updatedData,\n        profilestatus: apiStatusList.success,\n      })\n    } else {\n      this.setState({profilestatus: apiStatusList.failure})\n    }\n  }\n\n  updateddatafunc = profile => ({\n    name: profile.name,\n    profileImageUrl: profile.profile_image_url,\n    shortBio: profile.short_bio,\n  })\n\n  renderprofilecard = () => {\n    const {profileDetails} = this.state\n    const {name, shortBio} = profileDetails\n    return (\n      <div className=\"profile-bg\">\n        <img\n          src={profileDetails.profileImageUrl}\n          alt=\"profile\"\n          className=\"profile-image\"\n        />\n        <h1 className=\"profile-name\">{name}</h1>\n        <p className=\"profile-description\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  retryFetchProfile = () => {\n    this.getProfileDetails()\n  }\n\n  renderprofileFailure = () => (\n    <button className=\"retrybtn\" type=\"button\" onClick={this.retryFetchProfile}>\n      Retry\n    </button>\n  )\n\n  renderloader = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#ffffff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  profilestatus = () => {\n    const {profilestatus} = this.state\n    switch (profilestatus) {\n      case apiStatusList.failure:\n        return this.renderprofileFailure()\n      case apiStatusList.success:\n        return this.renderprofilecard()\n      case apiStatusList.loading:\n        return this.renderloader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return this.profilestatus()\n  }\n}\n\nexport default ProfileDetails\n","import Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {BsSearch} from 'react-icons/bs'\nimport {Component} from 'react'\nimport ProjectHeader from '../ProjectHeader'\nimport JobItemCard from '../JobItemCard'\nimport ProfileDetails from '../ProfileDetails'\n\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\nconst apiStatusList = {\n  initial: 'INITIAL',\n  loading: 'LOADING',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nclass Jobs extends Component {\n  state = {\n    typeOfemplList: [],\n    salaryoption: '0',\n    searchInput: '',\n    jobsList: [],\n    jobstatus: apiStatusList.initial,\n    profilestatus: apiStatusList.initial,\n  }\n\n  componentDidMount() {\n    this.getJobsDetails()\n  }\n\n  convertData = eachItem => ({\n    companyLogoUrl: eachItem.company_logo_url,\n    employmentType: eachItem.employment_type,\n    id: eachItem.id,\n    jobDescription: eachItem.job_description,\n    location: eachItem.location,\n    packagePerAnnum: eachItem.package_per_annum,\n    rating: eachItem.rating,\n    title: eachItem.title,\n  })\n\n  getJobsDetails = async () => {\n    this.setState({jobstatus: apiStatusList.loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n    const {salaryoption, typeOfemplList, searchInput} = this.state\n    const liststr = typeOfemplList.join(',')\n    console.log(liststr)\n    const url = `https://apis.ccbp.in/jobs?employment_type=${liststr}&minimum_package=${salaryoption}search=${searchInput}`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      const updatedData = data.jobs.map(each => this.convertData(each))\n      this.setState({\n        jobsList: updatedData,\n        jobstatus: apiStatusList.success,\n      })\n    } else {\n      this.setState({jobstatus: apiStatusList.failure})\n    }\n  }\n\n  updateddatafunc = profile => ({\n    name: profile.name,\n    profileImageUrl: profile.profile_image_url,\n    shortBio: profile.short_bio,\n  })\n\n  getProfileDetails = async () => {\n    this.setState({profilestatus: apiStatusList.loading})\n\n    const jwtToken = Cookies.get('jwt_token')\n    const url = 'https://apis.ccbp.in/profile'\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      const profileDetails = data.profile_details\n\n      const updatedData = this.updateddatafunc(profileDetails)\n\n      this.setState({\n        profileDetails: updatedData,\n        profilestatus: apiStatusList.success,\n      })\n    } else {\n      this.setState({profilestatus: apiStatusList.failure})\n    }\n  }\n\n  profilecard = () => {\n    const {profileDetails} = this.state\n    const {name, shortBio} = profileDetails\n    return (\n      <div className=\"profile-bg\">\n        <img\n          src={profileDetails.profileImageUrl}\n          alt=\"profile\"\n          className=\"profile-image\"\n        />\n        <h1 className=\"profile-name\">{name}</h1>\n        <p className=\"profile-description\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  employType = () => (\n    <>\n      <h1 className=\"Type-of-Employment\">Type of Employment</h1>\n      <ul className=\"type-list\">\n        {employmentTypesList.map(each => {\n          const onChangeemploymentType = () => {\n            const {typeOfemplList} = this.state\n            console.log(typeOfemplList)\n            if (!typeOfemplList.includes(each.employmentTypeId)) {\n              this.setState(\n                prevState => ({\n                  typeOfemplList: [\n                    ...prevState.typeOfemplList,\n                    each.employmentTypeId,\n                  ],\n                }),\n                this.getJobsDetails,\n              )\n            } else {\n              this.setState(\n                prevState => ({\n                  typeOfemplList: prevState.typeOfemplList.filter(\n                    eachitem => eachitem !== each.employmentTypeId,\n                  ),\n                }),\n                this.getJobsDetails,\n              )\n            }\n          }\n          return (\n            <div className=\"option-container\">\n              <input\n                className=\"checkbox\"\n                name=\"employmentType\"\n                type=\"checkbox\"\n                id={each.employmentTypeId}\n                key={each.employmentTypeId}\n                onChange={onChangeemploymentType}\n              />\n              <label className=\"sorting-label\" htmlFor={each.employmentTypeId}>\n                {each.label}\n              </label>\n            </div>\n          )\n        })}\n      </ul>\n    </>\n  )\n\n  salaryOptions = () => (\n    <div className=\"salaryoptions-container\">\n      <h1 className=\"salaryrange-heading\">Salary Range</h1>\n      <ul className=\"salayranges-list\">\n        {salaryRangesList.map(each => {\n          const onChangevalue = () => {\n            this.setState(\n              {salaryoption: each.salaryRangeId},\n              this.getJobsDetails,\n            )\n          }\n          return (\n            <div className=\"option-container\">\n              <input\n                className=\"radio\"\n                name=\"salaryrange\"\n                type=\"radio\"\n                id={each.salaryRangeId}\n                onChange={onChangevalue}\n                key={each.salaryRangeId}\n              />\n              <label className=\"sorting-label\" htmlFor={each.salaryRangeId}>\n                {each.label}\n              </label>\n            </div>\n          )\n        })}\n      </ul>\n    </div>\n  )\n\n  renderjobsList = () => {\n    const {jobsList} = this.state\n    if (jobsList.length === 0) {\n      return (\n        <div className=\"noJobs-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n            alt=\"no jobs\"\n            className=\"noproducts-pic\"\n          />\n          <h1 className=\"noJobs-heading\">No jobs Found</h1>\n          <p className=\"noJobs-text\">\n            We could not find any jobs.Try other filters.\n          </p>\n        </div>\n      )\n    }\n    return (\n      <ul className=\"jobslist\">\n        {jobsList.map(each => (\n          <JobItemCard itemDetails={each} key={each.id} />\n        ))}\n      </ul>\n    )\n  }\n\n  retryFetch = () => {\n    this.getJobsDetails()\n  }\n\n  renderFailureView = () => (\n    <div className=\"failureview-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-image\"\n      />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-para\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button className=\"retrybtn\" type=\"button\" onClick={this.retryFetch}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderloader = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#4f46e5\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFetchStatus = () => {\n    const {jobstatus} = this.state\n    switch (jobstatus) {\n      case apiStatusList.loading:\n        return this.renderloader()\n      case apiStatusList.failure:\n        return this.renderFailureView()\n      case apiStatusList.success:\n        return this.renderjobsList()\n      default:\n        return null\n    }\n  }\n\n  retryFetchProfile = () => {\n    this.getProfileDetails()\n  }\n\n  renderprofileFailure = () => (\n    <button className=\"retrybtn\" type=\"button\" onClick={this.retryFetchProfile}>\n      Retry\n    </button>\n  )\n\n  onChangeSearchInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  searchStart = () => {\n    this.getJobsDetails()\n  }\n\n  profilestatus = () => {\n    const {profilestatus} = this.state\n    switch (profilestatus) {\n      case apiStatusList.failure:\n        return this.renderprofileFailure()\n      case apiStatusList.success:\n        return this.getProfileDetails()\n      case apiStatusList.loading:\n        return this.renderloader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <ProjectHeader />\n        <div className=\"jobs-bg-container\">\n          <div className=\"sideContainer\">\n            <ProfileDetails />\n            <hr className=\"hrline\" />\n            {this.employType()}\n            <hr className=\"hrline\" />\n            {this.salaryOptions()}\n          </div>\n          <div className=\"right-side-container\">\n            <div className=\"input-container\">\n              <input\n                className=\"inputel\"\n                placeholder=\"Search\"\n                type=\"search\"\n                onChange={this.onChangeSearchInput}\n              />\n              <button\n                type=\"button\"\n                data-testid=\"searchButton\"\n                className=\"search-button\"\n                onClick={this.searchStart}\n              >\n                <BsSearch className=\"search-icon\" />\n              </button>\n            </div>\n            {this.renderFetchStatus()}\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Jobs\n","import Cookies from 'js-cookie'\nimport {Route, Redirect} from 'react-router-dom'\n\nconst ProtectedRoute = props => {\n  const accessToken = Cookies.get('jwt_token')\n  if (accessToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import './index.css'\nimport ProjectHeader from '../ProjectHeader'\n\nconst NotFound = () => (\n  <>\n    <ProjectHeader />\n    <div className=\"notfound-bg\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n        className=\"notfound-image\"\n      />\n      <h1 className=\"heading\">Page Not Found</h1>\n      <p className=\"notfound-text\">\n        we’re sorry, the page you requested could not be found\n      </p>\n    </div>\n  </>\n)\n\nexport default NotFound\n","import {BsFillStarFill} from 'react-icons/bs'\nimport './index.css'\n\nconst SimilarJobsCard = props => {\n  const {jobdetails} = props\n  const {\n    companyLogoUrl,\n    jobDescription,\n    rating,\n    title,\n    location,\n    employmentType,\n  } = jobdetails\n\n  return (\n    <div className=\"card-bg-container \">\n      <div className=\"name-logo-container\">\n        <img className=\"app-logo\" alt=\"company logo\" src={companyLogoUrl} />\n        <div className=\"name-container\">\n          <h1 className=\"company-name\">{title}</h1>\n          <div className=\"rating-container\">\n            <BsFillStarFill className=\"star-icon\" />\n            <p className=\"rating\">{rating}</p>\n            <p className=\"rating\">{location}</p>\n            <p className=\"rating\">{employmentType}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"description-heading\">Description</h1>\n      <p className=\"description\">{jobDescription}</p>\n    </div>\n  )\n}\n\nexport default SimilarJobsCard\n","import {BsFillStarFill, BsBriefcaseFill} from 'react-icons/bs'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {Component} from 'react'\nimport ProjectHeader from '../ProjectHeader'\nimport SimilarJobsCard from '../SimilarJobsCard'\n\nimport './index.css'\n\nconst apiStatusList = {\n  initial: 'INITIAL',\n  failure: 'FAILURE',\n  success: 'SUCCESS',\n  loading: 'LOADING',\n}\n\nclass JobItemDetails extends Component {\n  state = {wholejobDetails: {}, loadingstatus: apiStatusList.initial}\n\n  componentDidMount() {\n    this.getitemDetails()\n  }\n\n  skillsConvertion = eachskill => ({\n    imageUrl: eachskill.image_url,\n    name: eachskill.name,\n  })\n\n  dataConversion = job => ({\n    companyLogoUrl: job.company_logo_url,\n    companyWebsiteUrl: job.company_website_url,\n    employmentType: job.employment_type,\n    id: job.id,\n    title: job.title,\n    jobDescription: job.job_description,\n    skills: job.skills.map(each => this.skillsConvertion(each)),\n    lifeAtCompany: {\n      description: job.life_at_company.description,\n      imageUrl: job.life_at_company.image_url,\n    },\n    location: job.location,\n    packagePerAnnum: job.package_per_annum,\n    rating: job.rating,\n  })\n\n  dataCoversionOfSimilarJobs = job => ({\n    companyLogoUrl: job.company_logo_url,\n    companyWebsite: job.company_website_url,\n    employmentType: job.employment_type,\n    id: job.id,\n    jobDescription: job.job_description,\n    location: job.location,\n    packagePerAnnum: job.package_per_annum,\n    rating: job.rating,\n    title: job.title,\n  })\n\n  getitemDetails = async () => {\n    this.setState({loadingstatus: apiStatusList.loading})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    console.log(id)\n    const data = await response.json()\n    if (response.ok) {\n      const updatedData = {\n        jobDetails: this.dataConversion(data.job_details),\n        similarJobs: data.similar_jobs.map(each =>\n          this.dataCoversionOfSimilarJobs(each),\n        ),\n      }\n      this.setState({\n        wholejobDetails: updatedData,\n        loadingstatus: apiStatusList.success,\n      })\n    } else {\n      this.setState({loadingstatus: apiStatusList.failure})\n    }\n  }\n\n  renderApiStatus = () => {\n    const {loadingstatus} = this.state\n    switch (loadingstatus) {\n      case apiStatusList.loading:\n        return this.renderloader()\n      case apiStatusList.success:\n        return this.renderJobDetails()\n      case apiStatusList.failure:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  retryFetch = () => {\n    this.getitemDetails()\n  }\n\n  renderFailureView = () => (\n    <div className=\"failureview-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-image\"\n      />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-para\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button className=\"retrybtn\" type=\"button\" onClick={this.retryFetch}>\n        Retry\n      </button>\n    </div>\n  )\n\n  renderloader = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#6366f1\" height=\"80\" width=\"80\" />\n    </div>\n  )\n\n  renderJobDetails = () => {\n    const {wholejobDetails} = this.state\n    const {jobDetails, similarJobs} = wholejobDetails\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      rating,\n      title,\n      location,\n      employmentType,\n      packagePerAnnum,\n      jobDescription,\n    } = jobDetails\n\n    return (\n      <div className=\"job-item-details\">\n        <div className=\"jobDetails-container\">\n          <div className=\"name-logo-container\">\n            <img\n              className=\"app-logo\"\n              alt=\"job details company logo\"\n              src={companyLogoUrl}\n            />\n            <div className=\"name-container\">\n              <h1 className=\"company-name\">{title}</h1>\n              <div className=\"rating-container\">\n                <BsFillStarFill className=\"star-icon\" />\n                <p className=\"rating\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <hr className=\"hrline\" />\n          <div className=\"extra-options-container\">\n            <div className=\"location-and-type-container\">\n              {/* <IoLocationSharp className=\"location-icon\" /> */}\n              <p className=\"location\">{location}</p>\n              <BsBriefcaseFill className=\"case-icon\" />\n              <p className=\"type\">{employmentType}</p>\n            </div>\n            <p className=\"salary\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"hrline\" />\n          <div className=\"description-and-visit-container\">\n            <h1 className=\"job-details-description-heading\">Description</h1>\n            <a href={companyWebsiteUrl} className=\"visit-url\">\n              Visit\n            </a>\n          </div>\n          <p className=\"job-details-description\">{jobDescription}</p>\n          <h1 className=\"skills-heading\">Skills</h1>\n          <ul className=\"skills-container\">\n            {jobDetails.skills.map(each => (\n              <div className=\"each-skill\">\n                <img\n                  src={each.imageUrl}\n                  alt=\"each.name\"\n                  className=\"skill-icon\"\n                  key={each.id}\n                />\n                <p className=\"skill-name\">{each.name}</p>\n              </div>\n            ))}\n          </ul>\n          <h1 className=\"life-at-company-heading\">Life at Company</h1>\n          <div className=\"life-at-company-description\">\n            <p className=\"description\">\n              {jobDetails.lifeAtCompany.description}\n            </p>\n            <img\n              src={jobDetails.lifeAtCompany.imageUrl}\n              alt=\"life at company\"\n              className=\"company-image\"\n            />\n          </div>\n        </div>\n        <hr className=\"hrline\" />\n        <h1 className=\"similar-jobs-heading\">Similar Jobs</h1>\n        <ul className=\"similar-jobs-list\">\n          {similarJobs.map(each => (\n            <SimilarJobsCard jobdetails={each} key={each.id} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <ProjectHeader />\n        {this.renderApiStatus()}\n      </div>\n    )\n  }\n}\n\nexport default JobItemDetails\n","import {Route, Switch} from 'react-router-dom'\nimport LoginForm from './components/LoginForm'\nimport Home from './components/Home'\nimport Jobs from './components/Jobs'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFound from './components/NotFound'\nimport './App.css'\nimport JobItemDetails from './components/JobItemDetails'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={LoginForm} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute path=\"/jobs/:id\" component={JobItemDetails} />\n    <NotFound />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}